FROM python:3.11-slim as base

ARG TORCHLITE_VERSION

ENV TORCHLITE_PORT 8000
ENV TORCHLITE_VERSION "${TORCHLITE_VERSION:-0.0.0}"

# Keeps Python from generating .pyc files in the container
ENV PYTHONDONTWRITEBYTECODE 1
# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED 1
ENV PYTHONFAULTHANDLER 1
ENV PYTHONHASHSEED random
ENV PIP_NO_CACHE_DIR 1

RUN pip install --upgrade pip
RUN useradd -ms /bin/bash torchlite
WORKDIR /home/torchlite

FROM base as builder

ENV PIP_DEFAULT_TIMEOUT 100
ENV PIP_DISABLE_PIP_VERSION_CHECK 1
ENV PIPX_BIN_DIR /usr/local/bin
ENV POETRY_VERSION 1.4.2
ENV POETRY_VIRTUALENVS_IN_PROJECT true
ENV POETRY_DYNAMIC_VERSIONING_BYPASS true

RUN pip install --upgrade pipx && pipx install "poetry==$POETRY_VERSION"

COPY poetry.lock pyproject.toml README.* ./
COPY htrc ./htrc

RUN poetry install --no-interaction --no-ansi --no-root --only=main --sync && \
    poetry version "$TORCHLITE_VERSION" && \
    poetry build --format=wheel

FROM base as final

ENV PATH ".local/bin:$PATH"

COPY --chown=torchlite:torchlite --from=builder /home/torchlite/dist .
COPY --chown=torchlite:torchlite docker-entrypoint.sh .
COPY --chown=torchlite:torchlite log_conf.yaml .

USER torchlite

RUN pip install *.whl && rm -f *.whl

EXPOSE $TORCHLITE_PORT

CMD ["./docker-entrypoint.sh"]
